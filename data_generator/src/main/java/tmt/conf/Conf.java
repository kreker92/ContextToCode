package tmt.conf;

import com.google.gson.Gson;
import com.google.gson.internal.LinkedTreeMap;

import tmt.dsl.Classifier;
import tmt.dsl.formats.context.in.ElementInfo;
import tmt.dsl.formats.context.in.InnerClass;

import java.io.FileReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

public class Conf {
  public static final String lang = "javascript";
  public final static String root = "/root/ContextToCode/data/datasets/js/";
  
    public static final ArrayList<String> bad_types = new Gson().fromJson(
            "[\"PsiJavaToken\",\"PsiDocToken\",\"PsiElement(BAD_CHARACTER)\",\"PsiModifierList\",\"PsiField\",\"PsiTypeElement\",\"PsiParameter\"]", ArrayList.class);
    public static final ArrayList<String> good_types  = new Gson().fromJson("[\"PsiKeyword\",\"PsiIdentifier\"]", ArrayList.class);
    
    
    public static final String main_tabs = "['ajax', 'ajax1']";
    public static final String else_tabs = "['alert']"; 

    public static final String def_tabs = "{ ajax: { tab: '<a class=\"nav-link bg-info\" id=\"tip-1-tab\" data-toggle=\"pill\" href=\"#tip-1\" role=\"tab\" aria-controls=\"tip-1\" aria-selected=\"false\">jQuery.ajax</a>', content: ` <div class=\"tab-pane\" id=\"tip-1\" role=\"tabpanel\" aria-labelledby=\"tip-1-tab\" data-tip=\"1\"> <script> resCode['tab1'] = { replace1: '$.ajax({', replace2: '});', template: \" \" }; </script> <div class=\"code-wrapper\"> <h3>Функция отправки AJAX запроса библиотеки jQuery .ajax()</h3> <p>С помощи этой функции вы можете отсылать запросы AJAX из скрипта JavaScript.</p> <p>Параметры: <b>url</b> - адрес, на который будте отправлен запрос, <b>async</b> - true, если вы хотите чтобы был отправлен асинхронный запрос (по умолчанию - false), <b>type</b> - тип запроса GET или POST (по умолчанию, GET), <b>error</b> - функция, которая будет выполнена в случае ошибки при выполнении отправки запроса <b>success</b> - функция, которая будет выполнена в случае успешного выполнения запроса</p> </div> <hr /> <div class=\"row\"> <div class=\"col-12 col-md-6\"> <div class=\"form-edit\"> <p><b>$.ajax({</b></p> <div class=\"input-group mb-3\"> <div class=\"input-group-prepend\"> <span class=\"input-group-text\">url:</span> </div> <input data-part=\"1\" type=\"text\" class=\"form-control\" aria-label=\"URL, на который будет отправлен запрос\" /> </div> <div class=\"input-group mb-3\"> <div class=\"input-group-prepend\"> <span class=\"input-group-text\">async:</span> </div> <div class=\"input-group-append\"> <select data-part=\"2\" class=\"form-control\"> <option value=\"false\">false</option> <option value=\"true\">true</option> </select> </div> </div> <div class=\"input-group mb-3\"> <div class=\"input-group-prepend\"> <span class=\"input-group-text\">type:</span> </div> <div class=\"input-group-append\"> <select data-part=\"3\" class=\"form-control\"> <option value=\"GET\">GET</option> <option value=\"POST\">POST</option> </select> </div> </div> <div class=\"input-group mb-3\"> <div class=\"input-group-prepend\"> <span class=\"input-group-text\">error:</span> </div> <textarea data-part=\"4\" class=\"form-control\" rows=\"4\">function (content) { $menucontainer.html('') } </textarea> </div> <div class=\"input-group mb-3\"> <div class=\"input-group-prepend\"> <span class=\"input-group-text\">success:</span> </div> <textarea data-part=\"5\" class=\"form-control\" rows=\"4\">function (content) { $menucontainer.html('') } </textarea> </div> <b>});</b> </div> </div> <div class=\"col-12 col-md-6\"> <pre><code class=\"language-js code-result\"></code></pre> </div> </div> <div class=\"row paddingTop10\"> <div class=\"col-12\"> <!-- <div class=\"mark bg-dark\"> <div class=\"btn-toolbar\"> <div class=\"btn-group btn-group-sm btn-block form-group\" data-toggle=\"buttons\"> <label class=\"btn btn-outline-light\"> <input type=\"radio\" name=\"options\" value=\"useful\"> Useful </label> <label class=\"btn btn-outline-light\"> <input type=\"radio\" name=\"options\" value=\"rel+\"> Rel+ </label> <label class=\"btn btn-outline-light\"> <input type=\"radio\" name=\"options\" value=\"rel-\"> Rel- </label> <label class=\"btn btn-outline-light\"> <input type=\"radio\" name=\"options\" value=\"notrel\"> Not rel </label> <label class=\"btn btn-outline-light\"> <input type=\"radio\" name=\"options\" value=\"stupid\"> Stupid </label> <label class=\"btn btn-outline-light\"> <input type=\"radio\" name=\"options\" value=\"\"> No mark </label> </div> </div> <div class=\"form-group\"> <textarea class=\"form-control\" rows=\"3\" placeholder=\"Комментарий\"></textarea> </div> <div class=\"form-group\"> <button type=\"button\" class=\"btn btn-outline-info btn-block\">Отправить</button> </div> </div> --> <button class=\"btn btn-outline-light btn-block\" onclick=\"useAdvise(1)\">Вставить код</button> <!--<button class=\"btn btn-dark btn-block\" onclick=\"hideAdvise()\">Скрыть</button>--> </div> </div> </div> ` }, ajax1: { tab: '<a class=\"nav-link bg-info\" id=\"tip-2-tab\" data-toggle=\"pill\" href=\"#tip-2\" role=\"tab\" aria-controls=\"tip-1\" aria-selected=\"false\">alert</a>', content: ` <div class=\"tab-pane\" id=\"tip-2\" role=\"tabpanel\" aria-labelledby=\"tip-2-tab\" data-tip=\"2\"> <script> resCode['tab2'] = { replace1: '$.ajax1({', replace2: '});;', template: \"\" }; </script> <div class=\"code-wrapper\"> <h3>Функция AJAX1</h3> <p>С помощи этой функции вы можете отсылать запросы AJAX1 из скрипта JavaScript.</p> </div> <hr /> <div class=\"row\"> <div class=\"col-12 col-md-6\"> <div class=\"form-edit\"> <p><b>$.ajax1({</b></p> <div class=\"input-group mb-3\"> <div class=\"input-group-prepend\"> <span class=\"input-group-text\">url:</span> </div> <input data-part=\"1\" type=\"text\" class=\"form-control\" aria-label=\"URL, на который будет отправлен запрос\" /> </div> <div class=\"input-group mb-3\"> <div class=\"input-group-prepend\"> <span class=\"input-group-text\">success:</span> </div> <textarea data-part=\"2\" class=\"form-control\" rows=\"4\">function (content) { $menucontainer.html('') } </textarea> </div> <b>});;</b> </div> </div> <div class=\"col-12 col-md-6\"> <pre><code class=\"language-js code-result\"></code></pre> </div> </div> <div class=\"row paddingTop10\"> <div class=\"col-12\"> <button class=\"btn btn-outline-light btn-block\" onclick=\"useAdvise(2)\">Вставить код</button> </div> </div> </div> ` }, alert: { tab: '<a class=\"nav-link\" id=\"tip-3-tab\" data-toggle=\"pill\" href=\"#tip-3\" role=\"tab\" aria-controls=\"tip-1\" aria-selected=\"false\">alert</a>', content: ` <div class=\"tab-pane\" id=\"tip-3\" role=\"tabpanel\" aria-labelledby=\"tip-3-tab\" data-tip=\"3\"> <script type=\"text/javascript\"> resCode['tab3'] = { replace1: '$.ajax1({', replace2: '});;', template: \"\" }; </script> qwe <input data-part=\"1\" type=\"text\" class=\"form-control\" aria-label=\"URL, на который будет отправлен запрос\" /> <textarea data-part=\"2\" class=\"form-control\" rows=\"4\">function (content) { $menucontainer.html('') } </textarea> <code class=\"language-js code-result\"></code> </div> ` } };";
    
    public static final ArrayList<String> js_keys = new Gson().fromJson("[\"math\", \"math.floor\", \"math.random\", \"document.getelementbyid\", \"document.getelementsbytagname\", \"document.getelementsbyclassname\", \"indexof\", \"addeventlistener\", \"onclick\", \"onscroll\", \"onmouseout\", \"onmouseover\"]", ArrayList.class);
      /* [\"window\", \"match\", \"replace\", \"number\", \"split\", \"math\", \"math.floor\", \"math.random\""
        + ", \"prompt\", \"confirm\", \"console.log\", \"window.location\", \"document.head\", \"document.getelementsbytagname\"] 
       * 
       * "[\"math.floor\", \"math.random\", \"indexof\", \"number\", \"document.getelementbyid\", \"window.location\","
        + " \"console.log\", \"document.getelementsbytagname\", \"addeventlistener\", "
        + "\"onclick\", \"onscroll\", \"onload\", \"document.head\", \"prompt\", \"onmouseover\", \"confirm\", \"document.getelementsbyclassname\", \"alert\"]", ArrayList.class);*/

    public static Classifier templates = new Gson().fromJson(
        "{\"classes\":[{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\"," +
                "\"ast_type\":\"PsiType:Intent\",\"comparing_method\":\"ast_type\"},{\"node\":\"\"," +
                "\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Intent#PsiIdentifier:getAction\"," +
                "\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Intent\"," +
                "\"executor_command\":\"22\",\"scheme\":[{\"literal1\":\"String iAction \\u003d \",\"stab_req2\":\"PsiType:Intent\",\"literal3\":" +
                "\".getAction();\"}],\"description\":\"Retrieve the general action to be performed, such as ACTION_VIEW\"},{\"elements\":[{\"node\":\"\"," +
                "\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:EditText\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\"," +
                "\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:EditText#PsiIdentifier:toString\",\"comparing_method\":\"class_method\"}]," +
                "\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"EditText\",\"executor_command\":\"44\",\"scheme\":[{\"literal1\":" +
                "\"String eText \\u003d \",\"stab_req2\":\"PsiType:EditText\",\"literal3\":\".getText().toString();\"}],\"description\":\"Return the text that" +
                " TextView is displaying\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Resources\",\"comparing_method\"" +
                ":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Resources#PsiIdentifier:getResources\"," +
                "\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Resources\",\"executor_command\":\"23\"" +
                ",\"scheme\":[{\"literal1\":\"Resources resources \\u003d \",\"stab_req2\":\"PsiType:Resources\",\"literal3\":\".getResources();\"}],\"description\":" +
                "\"Returns a Resources instance for the application\\u0027s package\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":" +
                "\"PsiType:SharedPreferences\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":" +
                "\"PsiType:SharedPreferences#PsiIdentifier:getBoolean\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\"," +
                "\"ast_type\":\"SharedPreferences\",\"executor_command\":\"45\",\"scheme\":[{\"literal1\":\"boolean spBoolean \\u003d \",\"stab_req2\":\"PsiType:SharedPref" +
                "erences\",\"literal3\":\".getBoolean (String key, boolean defValue);\"}],\"description\":\"Retrieve a boolean value from the preferences\"},{\"elements\":[" +
                "{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:TextView\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"lin" +
                "e\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:TextView#PsiIdentifier:setVisibility\",\"comparing_method\":\"class_method\"}],\"start\":0," +
                "\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"TextView\",\"executor_command\":\"24\",\"scheme\":[{\"stab_req1\":\"PsiType:TextView\",\"liter" +
                "al2\":\".setVisibility (int visibility);\"}],\"description\":\"Set the visibility state of this view\"},{\"elements\":[{\"node\":\"\",\"text\":\"\"," +
                "\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Parcel\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_" +
                "type\":\"\",\"class_method\":\"PsiType:Parcel#PsiIdentifier:writeInt\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"typ" +
                "e\":\"truekey\",\"ast_type\":\"Parcel\",\"executor_command\":\"46\",\"scheme\":[{\"stab_req1\":\"PsiType:Parcel\",\"literal2\":\".writeInt (int val);\"}]," +
                "\"description\":\"Write an integer value into the parcel at the current dataPosition()\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":" +
                "\"\",\"ast_type\":\"PsiType:SharedPreferences\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\"," +
                "\"class_method\":\"PsiType:SharedPreferences#PsiIdentifier:getString\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"ty" +
                "pe\":\"truekey\",\"ast_type\":\"SharedPreferences\",\"executor_command\":\"25\",\"scheme\":[{\"literal1\":\"String spString \\u003d \",\"stab_req2\":\"PsiT" +
                "ype:SharedPreferences\",\"literal3\":\".getString (String key, boolean defValue);\"}],\"description\":\"Retrieve a String value from the preferences\"},{\"el" +
                "ements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Context\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":" +
                "\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Context#PsiIdentifier:getContentResolver\",\"comparing_method\":\"class_meth" +
                "od\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Context\",\"executor_command\":\"26\",\"scheme\":[{\"literal1\":\"Conten" +
                "tResolver cResolver \\u003d \",\"stab_req2\":\"PsiType:Context\",\"literal3\":\".getContentResolver();\"}],\"description\":\"Return a ContentResolver inst" +
                "ance for your application\\u0027s package\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:EditText\",\"com" +
                "paring_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:EditText#PsiIdentifier:s" +
                "etText\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"EditText\",\"executor_command\":" +
                "\"27\",\"scheme\":[{\"stab_req1\":\"PsiType:EditText\",\"literal2\":\".setText (CharSequence text, TextView.BufferType type);\"}],\"description\":\"Sets t" +
                "he text to be displayed and the TextView.BufferType\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:MotionE" +
                "vent\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:MotionEvent#" +
                "PsiIdentifier:getX\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"MotionEvent\",\"exec" +
                "utor_command\":\"28\",\"scheme\":[{\"literal1\":\"Float meXcoor \\u003d \",\"stab_req2\":\"PsiType:MotionEvent\",\"literal3\":\".getX();\"}],\"description\":" +
                "\"Returns the X coordinate of this event\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:LayoutInflater\",\"co" +
                "mparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:LayoutInflater#PsiIdentif" +
                "ier:inflate\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"LayoutInflater\",\"executor" +
                "_command\":\"29\",\"scheme\":[{\"literal1\":\"View liView \\u003d \",\"stab_req2\":\"PsiType:LayoutInflater\",\"literal3\":\".inflate (...);\"}],\"descrip" +
                "tion\":\"Inflate a new view hierarchy\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:TextView\",\"comparing" +
                "_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:TextView#PsiIdentifier:setText\"," +
                "\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"TextView\",\"executor_command\":\"30\",\"sc" +
                "heme\":[{\"stab_req1\":\"PsiType:TextView\",\"literal2\":\".setText (CharSequence text);\"}],\"description\":\"Set the text that is associated with this vi" +
                "ew\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Context\",\"comparing_method\":\"ast_type\"}," +
                "{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Context#PsiIdentifier:getSystemService\",\"comparing_" +
                "method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Context\",\"executor_command\":\"31\",\"scheme\":[{\"lit" +
                "eral1\":\"Object manager \\u003d \",\"stab_req2\":\"PsiType:Context\",\"literal3\":\".getSystemService (String name);\"}],\"description\":\"Return the han" +
                "dle to a system-level service by name\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Context\",\"comparing" +
                "_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Context#PsiIdentifier:getString\"," +
                "\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Context\",\"executor_command\":\"10\"," +
                "\"scheme\":[{\"literal1\":\"String text \\u003d \",\"stab_req2\":\"PsiType:Context\",\"literal3\":\".getString (int resId);\"}],\"description\":\"Returns a" +
                " localized string from the application\\u0027s package\\u0027s default string table\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\"," +
                "\"ast_type\":\"PsiType:MenuItem\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_meth" +
                "od\":\"PsiType:MenuItem#PsiIdentifier:getItemId\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_" +
                "type\":\"MenuItem\",\"executor_command\":\"11\",\"scheme\":[{\"literal1\":\"int mId \\u003d \",\"stab_req2\":\"PsiType:MenuItem\",\"literal3\":\".getItemI" +
                "d ();\"}],\"description\":\"Return the identifier for this menu item\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":" +
                "\"PsiType:TextView\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:" +
                "TextView#PsiIdentifier:findViewById\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Tex" +
                "tView\",\"executor_command\":\"33\",\"scheme\":[{\"literal1\":\"View tView \\u003d \",\"stab_req2\":\"PsiType:TextView\",\"literal3\":\".findViewById (int" +
                " id);\"}],\"description\":\"Finds the first descendant view with the given ID, the view itself if the ID matches getId()\"},{\"elements\":[{\"node\":\"\"," +
                "\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Intent\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":" +
                "\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Intent#PsiIdentifier:putExtra\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":" +
                "0,\"type\":\"truekey\",\"ast_type\":\"Intent\",\"executor_command\":\"12\",\"scheme\":[{\"stab_req1\":\"PsiType:Intent\",\"literal2\":\".putExtra (String" +
                " name, ... value);\"}],\"description\":\"Add extended data to the intent\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_ty" +
                "pe\":\"PsiType:PrintStream\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":" +
                "\"PsiType:PrintStream#PsiIdentifier:println\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":" +
                "\"PrintStream\",\"executor_command\":\"34\",\"scheme\":[{\"stab_req1\":\"PsiType:PrintStream\",\"literal2\":\".println (Object x);\"}],\"description\":\"Prin" +
                "ts an Object and then terminate the line\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:EditText\",\"compar" +
                "ing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:EditText#PsiIdentifier:" +
                "getText\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"EditText\",\"executor_command\":" +
                "\"13\",\"scheme\":[{\"literal1\":\"Editable eText \\u003d \",\"stab_req2\":\"PsiType:EditText\",\"literal3\":\".getText();\"}],\"description\":\"Return" +
                " the text that TextView is displaying\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Bundle\",\"comparing_" +
                "method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Bundle#PsiIdentifier:getString\"," +
                "\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Bundle\",\"executor_command\":\"35\",\"sche" +
                "me\":[{\"literal1\":\"String bString \\u003d \",\"stab_req2\":\"PsiType:Bundle\",\"literal3\":\".getString (String key);\"}],\"description\":\"Returns the" +
                " value associated with the given key\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:ContentValues\",\"com" +
                "paring_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:ContentValues#PsiIdentif" +
                "ier:put\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"ContentValues\",\"executor_co" +
                "mmand\":\"14\",\"scheme\":[{\"stab_req1\":\"PsiType:ContentValues\",\"literal2\":\".put (String key, value);\"}],\"description\":\"Adds a value to the " +
                "set\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Intent\",\"comparing_method\":\"ast_type\"}," +
                "{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Intent#PsiIdentifier:getStringExtra\",\"comparing_met" +
                "hod\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Intent\",\"executor_command\":\"36\",\"scheme\":[{\"stab" +
                "_req1\":\"PsiType:Intent\",\"literal2\":\".putExtra (String name, ...);\"}],\"description\":\"Retrieve extended data from the intent\"},{\"elements\":" +
                "[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Menu\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"lin" +
                "e\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Menu#PsiIdentifier:add\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0," +
                "\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Menu\",\"executor_command\":\"37\",\"scheme\":[{\"stab_req1\":\"PsiType:Menu\",\"literal2\":\".add (...);" +
                "\"}],\"description\":\"Add a new item to the menu\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:SQLite" +
                "Database\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:SQLite" +
                "Database#PsiIdentifier:execSQL\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"SQLite" +
                "Database\",\"executor_command\":\"15\",\"scheme\":[{\"stab_req1\":\"PsiType:SQLiteDatabase\",\"literal2\":\".execSQL (String sql, Object[] bindArgs);\"}]," +
                "\"description\":\"Execute a single SQL statement that is NOT a SELECT/INSERT/UPDATE/DELETE\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"ty" +
                "pe\":\"\",\"ast_type\":\"PsiType:Button\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"cla" +
                "ss_method\":\"PsiType:Button#PsiIdentifier:setOnClickListener\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"tru" +
                "ekey\",\"ast_type\":\"Button\",\"executor_command\":\"38\",\"scheme\":[{\"stab_req1\":\"PsiType:Button\",\"literal2\":\".setOnClickListener(new View.On" +
                "ClickListener() {\\n        @Override\\n        public void onClick(View view) {\\n            doSomeWork();\\n        }\\n    });\"}],\"description\":" +
                "\"Register a callback to be invoked when this view is context clicked\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":" +
                "\"PsiType:Resources\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:" +
                "Resources#PsiIdentifier:getString\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Resour" +
                "ces\",\"executor_command\":\"16\",\"scheme\":[{\"literal1\":\"String rString \\u003d \",\"stab_req2\":\"PsiType:Resources\",\"literal3\":\".getString (int" +
                " resId, Object... formatArgs);\"}],\"description\":\"Returns a localized string from the application\\u0027s package\\u0027s default string table\"},{\"el" +
                "ements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Bundle\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":" +
                "\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Bundle#PsiIdentifier:putString\",\"comparing_method\":\"class_method\"}],\"sta" +
                "rt\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Bundle\",\"executor_command\":\"39\",\"scheme\":[{\"stab_req1\":\"PsiType:Bundle\"," +
                "\"literal2\":\".putString (String key, String value);\"}],\"description\":\"Inserts a String value into the mapping of this Bundle, replacing any existing" +
                " value for the given key\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Parcel\",\"comparing_method\":" +
                "\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Parcel#PsiIdentifier:recycle\",\"comparing" +
                "_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Parcel\",\"executor_command\":\"17\",\"scheme\":" +
                "[{\"stab_req1\":\"PsiType:Parcel\",\"literal2\":\".recycle();\"}],\"description\":\"Put a Parcel object back into the pool\"},{\"elements\":[{\"node\":\"\"," +
                "\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:IntentFilter\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0," +
                "\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:IntentFilter#PsiIdentifier:addAction\",\"comparing_method\":\"class_method\"}],\"start\":0," +
                "\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"IntentFilter\",\"executor_command\":\"18\",\"scheme\":[{\"stab_req1\":\"PsiType:IntentFilter\"," +
                "\"literal2\":\".addAction (String action);\"}],\"description\":\"Add a new Intent action to match against\"},{\"elements\":[{\"node\":\"\",\"text\":" +
                "\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Cursor\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\"," +
                "\"ast_type\":\"\",\"class_method\":\"PsiType:Cursor#PsiIdentifier:moveToNext\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0," +
                "\"type\":\"truekey\",\"ast_type\":\"Cursor\",\"executor_command\":\"19\",\"scheme\":[{\"stab_req1\":\"PsiType:Cursor\",\"literal2\":\".moveToNext ();\"}]," +
                "\"description\":\"Move the cursor to the next row\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:PrintWri" +
                "ter\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:PrintWriter#" +
                "PsiIdentifier:println\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"PrintWriter\",\"ex" +
                "ecutor_command\":\"1\",\"scheme\":[{\"stab_req1\":\"PsiType:PrintWriter\",\"literal2\":\".println (Object x);\"}],\"description\":\"Prints an Object and th" +
                "en terminate the line\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Cursor\",\"comparing_method\":\"ast_ty" +
                "pe\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Cursor#PsiIdentifier:getInt\",\"comparing_method\":" +
                "\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Cursor\",\"executor_command\":\"2\",\"scheme\":[{\"literal1\":" +
                "\"int cValue \\u003d \",\"stab_req2\":\"PsiType:Cursor\",\"literal3\":\".getInt (int columnIndex);\"}],\"description\":\"Returns the value of the requested" +
                " column as an int\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Button\",\"comparing_method\":\"ast_t" +
                "ype\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Button#PsiIdentifier:findViewById\",\"comparing_" +
                "method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Button\",\"executor_command\":\"4\",\"scheme\":[{\"lit" +
                "eral1\":\"Button mButton \\u003d (Button) \",\"stab_req2\":\"PsiType:View\",\"literal3\":\".findViewById(int id);\"}],\"description\":\"Finds the first de" +
                "scendant view with the given ID\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Cursor\",\"comparing_met" +
                "hod\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Cursor#PsiIdentifier:getLong\",\"co" +
                "mparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Cursor\",\"executor_command\":\"5\",\"scheme" +
                "\":[{\"literal1\":\"long cValue \\u003d \",\"stab_req2\":\"PsiType:Cursor\",\"literal3\":\".getLong (int columnIndex);\"}],\"description\":\"Returns the" +
                " value of the requested column as a long\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Cursor\",\"compa" +
                "ring_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Cursor#PsiIdentifier:getC" +
                "ount\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Cursor\",\"executor_command\":\"6\"," +
                "\"scheme\":[{\"literal1\":\"int cCount \\u003d \",\"stab_req2\":\"PsiType:Cursor\",\"literal3\":\".getCount ();\"}],\"description\":\"Returns the numbers " +
                "of rows in the cursor\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Parcel\",\"comparing_method\":\"ast_" +
                "type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Parcel#PsiIdentifier:obtain\",\"comparing_meth" +
                "od\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Parcel\",\"executor_command\":\"7\",\"scheme\":[{\"liter" +
                "al1\":\"Parcel parcel \\u003d \",\"stab_req2\":\"PsiType:Parcel\",\"literal3\":\".obtain();\"}],\"description\":\"Retrieve a new Parcel object from the " +
                "pool\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Cursor\",\"comparing_method\":\"ast_type\"},{\"node\":" +
                "\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Cursor#PsiIdentifier:getColumnIndexOrThrow\",\"comparing_method\":" +
                "\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Cursor\",\"executor_command\":\"8\",\"scheme\":[{\"literal1\":" +
                "\"int cIndex \\u003d \",\"stab_req2\":\"PsiType:Cursor\",\"literal3\":\".getColumnIndex (String columnName);\"}],\"description\":\"Returns the zero-based " +
                "index for the given column name\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Cursor\",\"comparing_me" +
                "thod\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Cursor#PsiIdentifier:getColumnI" +
                "ndex\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Cursor\",\"executor_command\":\"9\"," +
                "\"scheme\":[{\"literal1\":\"int cIndex \\u003d \",\"stab_req2\":\"PsiType:Cursor\",\"literal3\":\".getColumnIndex (String columnName);\"}],\"description\":" +
                "\"Returns the value associated with the given key\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Cursor\"," +
                "\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Cursor#PsiIdentifier:" +
                "close\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Cursor\",\"executor_command\":\"40" +
                "\",\"scheme\":[{\"stab_req1\":\"PsiType:Cursor\",\"literal2\":\".close ();\"}],\"description\":\"Closes the Cursor, releasing all of its resources and mak" +
                "ing it completely invalid\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Paint\",\"comparing_method\":\"ast_" +
                "type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Paint#PsiIdentifier:setColor\",\"comparing_m" +
                "ethod\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Paint\",\"executor_command\":\"41\",\"scheme\":[{\"sta" +
                "b_req1\":\"PsiType:Paint\",\"literal2\":\".setColor (int color);\"}],\"description\":\"Set the paint\\u0027s color\"},{\"elements\":[{\"node\":\"\",\"te" +
                "xt\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiType:Cursor\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\"," +
                "\"ast_type\":\"\",\"class_method\":\"PsiType:Cursor#PsiIdentifier:moveToFirst\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_" +
                "num\":0,\"type\":\"truekey\",\"ast_type\":\"Cursor\",\"executor_command\":\"42\",\"scheme\":[{\"stab_req1\":\"PsiType:Cursor\",\"literal2\":\".moveToFir" +
                "st();\"}],\"description\":\"Move the cursor to the first row\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"PsiTyp" +
                "e:Parcel\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Parcel#P" +
                "siIdentifier:readInt\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Parcel\",\"executo" +
                "r_command\":\"20\",\"scheme\":[{\"literal1\":\"int pInt \\u003d \",\"stab_req2\":\"PsiType:Parcel\",\"literal3\":\".readInt();\"}],\"description\":\"Read " +
                "an integer value from the parcel at the current dataPosition()\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"Psi" +
                "Type:Cursor\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_method\":\"PsiType:Curso" +
                "r#PsiIdentifier:getString\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_type\":\"Cursor\",\"exe" +
                "cutor_command\":\"43\",\"scheme\":[{\"literal1\":\"String cValue \\u003d \",\"stab_req2\":\"PsiType:Cursor\",\"literal3\":\".getString (int columnInd" +
                "ex);\"}],\"description\":\"Returns the value of the requested column as a string\"},{\"elements\":[{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\"," +
                "\"ast_type\":\"PsiType:MotionEvent\",\"comparing_method\":\"ast_type\"},{\"node\":\"\",\"text\":\"\",\"line\":0,\"type\":\"\",\"ast_type\":\"\",\"class_m" +
                "ethod\":\"PsiType:MotionEvent#PsiIdentifier:getY\",\"comparing_method\":\"class_method\"}],\"start\":0,\"end\":0,\"line_num\":0,\"type\":\"truekey\",\"ast_" +
                "type\":\"MotionEvent\",\"executor_command\":\"21\",\"scheme\":[{\"literal1\":\"Float meXcoor \\u003d \",\"stab_req2\":\"PsiType:MotionEvent\",\"literal3\":" +
                "\".getY();\"}],\"description\":\"Returns the Y coordinate of this event\"}],\"folder\":\"android_crossvalidation2/\",\"blocking\":false,\"vs\":[],\"domain" +
                "\":\"MotionEvent_getY\"}", Classifier.class);
    public static String stab = "{\"elements\":[{\"node\":\"PsiExpressionStatement\",\"text\":\"stab\",\"line\":61,\"type\":\"EXPRESSION_STATEMENT\",\"parent\":\"PsiCodeBlock\"" +
            "},{\"node\":\"PsiReferenceExpression\",\"text\":\"stab\",\"line\":61,\"type\":\"REFERENCE_EXPRESSION\",\"ast_type\":\"PsiReferenceExpression:stab\",\"parent\":\"" +
            "PsiExpressionStatement\"},{\"node\":\"PsiReferenceParameterList\",\"text\":\"\",\"line\":61,\"type\":\"REFERENCE_PARAMETER_LIST\",\"parent\":\"PsiReferenceExpres" +
            "sion\"},{\"node\":\"PsiIdentifier\",\"text\":\"stab\",\"line\":61,\"type\":\"IDENTIFIER\",\"parent\":\"PsiReferenceExpression\"},{\"node\":\"PsiErrorElement\"," +
            "\"text\":\"\",\"line\":61,\"type\":\"ERROR_ELEMENT\",\"parent\":\"PsiExpressionStatement\"}],\"start\":2198,\"end\":2226,\"line_num\":61,\"line_text\":\"                       stab\\n\"}";
    
    public static LinkedTreeMap<String, LinkedTreeMap<String, String>> tabs = new Gson().fromJson("{  \"number\": {    \"title\": \"Number\",    \"content\": \"<h1>Кратко</h1><p>Обычно в JavaScript работают с примитивным числовым типом. Например так <code>let n = 58*4;</code>. </p><h1>В работе</h1><p>❗️ Используй примитивный тип, если не нужна ни одна из дополнительных функций. </p><p>🛠 Если вызывать <code>Number</code> как функцию, то она приводит переданный аргумент к числовому типу. Если привести не получается, то вернется <code>NaN</code>. Например:</p><pre><code>Number(&#x27;123&#x27;)      123\nNumber(&#x27;12.3&#x27;)     12.3\nNumber(&#x27;12.00&#x27;)    12\nNumber(&#x27;&#x27;)         0\nNumber(null)       0\nNumber(&#x27;0x11&#x27;)     17\nNumber(&#x27;0b11&#x27;)     3\nNumber(&#x27;0o11&#x27;)     9\nNumber(&#x27;foo&#x27;)      NaN\nNumber(&#x27;100a&#x27;)     NaN</code></pre><p>Таким образом можно избежать использования функций <code>parseInt</code> и <code>parseFloat</code>.</p><p>🛠 Обертка умеет округлять без вызова <code>Math.round</code>. Если у тебя на руках <code>Number</code>, то вызови функцию <code>toFixed</code> и она округлит текущее число до ближайшего целого. Дополнительным аргументом можно уточнить, да какого знака после запятой округлять:</p><pre><code>let num = 3264.55;  примитивное число\n num.toFixed(); &lt;--- такое не сработает, у примитивного типа нет метода toFixed\n\nlet wrappedNum = new Number(num);\nconsole.log(wrappedNum.toFixed());  напечатает 3265\nconsole.log(wrappedNum.toFixed(1));  напечатает 3264.6</code></pre><p>\n</p><p>Unlike many other programming languages, JavaScript does not define different types of numbers, like integers, short, long, floating-point etc.</p><p>JavaScript numbers are always stored as double precision floating point numbers, following the international IEEE 754 standard. <br><br>This format stores numbers in 64 bits, where the number (the fraction) is stored in bits 0 to 51, the exponent in bits 52 to 62, and the sign in bit 63:</p>\",    \"name\": \"Number\",    \"id\": \"7\"  },  \"math\": {    \"title\": \"Math\",    \"content\": \"<h3>Кратко</h3><p>Math — это объект, хранящий в себе различные математические константы (например число π) и функции типа вычисления квадратного корня. Обычно используется для генерации случайных чисел или округления значений.</p><h3 id='09d36cbb-ab0e-4706-afc6-e81f2a886c3c' class=''>В работе</h3><p id='9eaf6e57-fb06-4919-b449-5a2b9eaa05b1' class=''><em>Миша, front-end ниндзя\n</em></p><p id='8df1586a-0868-4e98-983c-250f777fd676' class=''>🛠Используй Math.random для <a href='https://www.notion.so/Math-random-d0cac56264194e10b8239d1956cea2d2'>генерации случайных чисел</a> в некритичных с точки зрения криптографии местах: выборе случайного элемента из массива и подобных задачах.</p><p id='bedf5989-20a8-46da-a300-fb0085b746fa' class=''>🛠Часть функций используется для <a href='https://www.notion.so/Math-floor-x-35dc9f4c766d41f882a3be31180aa83f'>округления чисел</a>.</p><p id='c136a436-9a5b-4f00-860e-edc4d589143b' class=''>🛠Еще при работе с числами тебе пригодится явный парсинг. Например, при получении значения поля нет гарантии, что полученный результат — число. Это может быть и строка в которой записано число. А может быть и строка с числом, но пользователь случайно допустил опечатку и ввел в качестве возраста не &quot;22&quot; а &quot;22&quot;, нажав клавишу находящуюся возле Enter. Такие случаи не должны рушить работу страницы.\n\nДля таких случаев и нужен парсинг. Он бывает двух видов — parseFloat и parseInt. В зависимости от используемой функции будет или целочисленный результат или дробное число. Если парсинг не удался, то результатом будет NaN:</p><figure id='4f0ba9ed-52e5-4de8-ae65-80d84b630140'><div class='source'><a href='https://codepen.io/vindi-r/full/YMewgy'>https://codepen.io/vindi-r/full/YMewgy</a></div></figure><p id='84304950-da70-4c9e-be01-f80ed3a3b57f' class=''>\n🛠Константы и математические функции чаще всего используются в рисовании или расчетах:</p><figure id='63c6a0dd-d3f2-42b6-9b26-45d0070bbf1b'><div class='source'><a href='https://codepen.io/vindi-r/pen/OGQNgz'>https://codepen.io/vindi-r/pen/OGQNgz</a></div></figure>\",    \"name\": \"Math\",    \"id\": \"4\"  },  \"math.floor\": {    \"title\": \"Math.floor()\",    \"content\": \"<h3>Кратко</h3><p id='c4acfaef-fe63-4bee-aceb-1aa31d51b790' class=''>Одна из самых часто используемых функции объекта <code>Math</code>. Возвращает случайное число в диапазоне от <code>0</code> до <code>1</code>, не включая <code>1</code>.</p><h3>В работе</h3><p id='2064b891-dd46-482a-8be6-4719d307a48e' class=''><em>Николай, front-end ниндзя</em>🛠Не используй генерацию числа в критичных местах, например для ключа доступа — для этого лучше использовать <a href='https://www.w3.org/TR/WebCryptoAPI/'>Web Cryptography API</a>. Он работает медленнее, но криптографически утойчив:</p><pre id='6425b98d-b0af-4e52-86f9-98e00496d39c' class='code'><code class='language-js code-result'>window.crypto.getRandomValues(new Uint32Array(1))[0] //  вернет случайное число от 0 до 2^32</code></pre><p id='aeb6e4fd-86f0-4736-acd4-b93c757f4ed1' class=''></p><p id='24aa9536-f06e-4b71-886c-64c6a0b5977c' class=''>🛠 Используется, когда нужно сгенерировать случайное число в заданном диапазоне. Функция возвращает число от 0 до 1, но диапазон можно расширить с помощью формулы:</p><pre id='53326913-ec1f-441c-91f6-f660af4c0268' class='code'><code class='language-js code-result'>Math.floor(Math.random() * (max - min)) + min; // от минимума до максимума, не включая максимум </code></pre><figure id='3abd0564-6193-4240-84f7-0d9b6edd988b'><div class='source'><a href='https://codepen.io/Lopinopulos/pen/ewOxWV'>https://codepen.io/Lopinopulos/pen/ewOxWV</a></div></figure><p id='36151833-0f18-473f-96c2-2258679d390b' class=''></p><p id='55e3e820-3d46-4559-a331-4911b557b3e0' class=''>🛠 Используется для выбора случайного элемента из массива. Например, вы хотите отобразить случайный товар дня из списка или же показать пользователю несколько элементов из его коллекции любимых песен.</p><figure id='8490fd47-7299-4c14-80b4-7c8c0f11a349'><div class='source'><a href='https://codepen.io/Lopinopulos/pen/KjPJey'>https://codepen.io/Lopinopulos/pen/KjPJey</a></div></figure>\",    \"name\": \"Math.floor()\",    \"id\": \"6\",    \"script\": \"resCode['tab6'] = { replace1: '', replace2: '', template: `  Math.floor(number: PART1); ` };\",    \"code\": \"<div class='row'><div class='col-12 col-md-6'><div class='form-edit'><p><b>Math.floor(</b></p><div class='input-group mb-3'><div class='input-group-prepend'><span class='input-group-text'>number:</span></div><textarea data-part='1' class='form-control' rows='1'>**VAR**</textarea></div><b>);</b></div></div><div class='col-12 col-md-6'><pre><code class='language-js code-result'></code></pre></div></div><div class='row paddingTop10'><div class='col-12'><button class='btn btn-outline-light btn-block' onclick='useAdvise(6)'>Вставить код</button></div></div>\"  },  \"math.random\": {    \"title\": \"Math.random()\",    \"content\": \"<h3>Кратко</h3><p id='4a09345f-8f1c-4165-b14c-8ab9554d9904' class=''>Объект <code>Math</code> содержит набор методов, который используется для округления чисел:</p><ul id='c0cfe8df-fdf4-4fbe-8d2d-12e5b0c902d8' class='bulleted-list'><li><code>round</code> — округление по обычным правилам;</li></ul><ul id='71831d46-be9c-4f25-bd5b-9515440fd725' class='bulleted-list'><li><code>floor</code> — окруление вниз;</li></ul><ul id='b2e29d7a-c345-4690-ae34-c7c7e40dbe38' class='bulleted-list'><li><code>ceil</code> — округление вверх;</li></ul><h3>В работе</h3><p id='91c8938b-46e4-4701-afc4-2da7c2477eb8' class=''><em>Николай, front-end ниндзя</em>\n\n🛠 Разные виды округления нужны в разных ситуациях:</p><ul id='cc7692b7-d9a9-4069-9b7d-4668a78fab72' class='bulleted-list'><li>когда разбиваешь данные на страницы и считаешь общее количество страниц,  используй округление вверх: <code>let totalPages = Math.ceil(totalItems / itemsPerPage);</code> </li></ul><ul id='c5959cb3-d68a-4d47-b6f3-3419d593c933' class='bulleted-list'><li>когда выбираешь случайный элемент массива, используй округление вниз: <code>Math.floor(Math.random()*array.length);</code></li></ul>\",    \"name\": \"Math.random()\",    \"id\": \"7\",    \"script\": \"resCode['tab7'] = { replace1: '', replace2: '', template: `  Math.random(number: PART1); ` };\",    \"code\": \"<div class='row'><div class='col-12 col-md-6'><div class='form-edit'><p><b>Math.random(</b></p><div class='input-group mb-3'><div class='input-group-prepend'><span class='input-group-text'>number:</span></div><textarea data-part='1' class='form-control' rows='1'>**VAR**</textarea></div><b>);</b></div></div><div class='col-12 col-md-6'><pre><code class='language-js code-result'>Math.random(**VAR**);</code></pre></div></div><div class='row paddingTop10'><div class='col-12'><button class='btn btn-outline-light btn-block' onclick='useAdvise(7)'>Вставить код</button></div></div>\"  },  \"document.getelementsbytagname\": {    \"name\": \".getElementsByTagName()\",    \"title\": \".getElementsByTagName(&#x27;&#x27;);\",    \"content\": \"<h1>Кратко</h1><p>Метод определен для объекта <code>document</code> и любого HTML-элемента (<code>Element</code>) страницы. Позволяет найти все элементы с заданным тегом среди дочерних. Возвращает похожую на массив HTMLCollection с найденными элементами. Если элементов не нашлось, то коллекция будет пустая, то есть с размером 0.</p><h1>Пример</h1><p>Метод принимает один параметр — название тега в виде строки. Например, <code>div</code>, <code>form</code>, <code>h5</code></p><pre><code class='language-js code-result'><html>\n  <head></head>\n  <body >\n    <div id=&quot;title&quot;>\n\t\t\t<h1>Привет, незнакомец!</h1>\n\t\t\t<p>Это параграф дочерний и для div, и для body</p>\n\t\t</div>\n    <p>Это параграф, дочерний для body</p>\n    <script type=&quot;text/javascript&quot;>\n       let pFromBody = document.getElementsByTagName(&#x27;p&#x27;);\n       console.log(pFromBody.length); // напечатает 2, так как поиск ведется по всей странице\n\n\t\t\t let divEl = document.getElementById(&#x27;title&#x27;);\n       // ищем параграфы внутри div:\n\t\t\t let pFromDiv = divEl.getElementsByTagName(&#x27;p&#x27;);\n       console.log(pFromDiv.length); // напечатает 1, так как внутри div только один p\n\n\t\t\t // ищем несуществующий элемент\n\t\t\t let spanFromBody = document.getElementsByTagName(&#x27;span&#x27;);\n       console.log(spanFromBody.length); // напечатает 0\n    </script>\n  </body>\n</html></code></pre><p>\n</p><h1>В работе</h1><p><em>Николай, front-end ниндзя\n</em>\n🛠 Поиск по тегам нужен нечасто.</p><p>🛠 Для поиска вообще всех элементов в качестве аргумента нужно передать строку <code>&#x27;*&#x27;</code>, ее называют wildcard. </p><p>🛠 Метод возвращает живую коллекцию. Это означает, что коллекция будет автоматически обновляться, если на странице появятся подходящие элементы:</p><figure><div class='source'><a href='https://codepen.io/Lopinopulos/pen/xNOBow'>https://codepen.io/Lopinopulos/pen/xNOBow</a></div></figure><p>\n🛠 Будь аккуратен, когда пишешь циклы над <code>HTMLCollection</code>. Так как коллекция живая, то цикл может стать бесконечным в тех случаях, когда на страницу добавляются и удаляются подходящие под поиск элементы.</p><p>🛠 Скрипты, которые работают с HTML видят только ту разметку, которую уже распарсил браузер. Браузер парсит HTML сверху вниз. Если ваш скрипт находится вверху страницы, то он не найдет элементы ниже в странице — браузер их еще не увидел и ничего о них не знает. Поэтому скрипты либо подключают в конце страницы, либо <a href='https://www.notion.so/Element-addEventListener-c329b78c4c4147f0916e03cd966d818f'>подписываются на событие</a> <code>DOMContent​Loaded</code>, которое сигнализирует о том, что браузер распарсил весь HTML.</p><p>\n</p>\",    \"id\": \"12\"  },  \"document.getelementsbyclassname\": {    \"title\": \".getElementsByClassName(&#x27;&#x27;);\",    \"content\": \"<h1>Кратко</h1><p>Метод определен для объекта <code>document</code> и любого HTML-элемента (<code>Element</code>) страницы. Позволяет найти все элементы с заданным классом или классами среди дочерних. </p><p>Метод принимает один параметр — название класса или список классов в виде строки. Если передаешь список классов, то раздели их названия пробелами <code>class1 class2</code>. Элемент подходит, если у него есть все классы из перечисленных.</p><p>Возвращает похожую на массив HTMLCollection с найденными элементами. Если элементов не нашлось, то коллекция будет пустая, то есть с размером 0. </p><h1>Пример</h1><pre><code class='language-js code-result'><html>\n  <head></head>\n  <body >\n    <div id=&quot;title&quot;>\n\t\t\t<h1>Привет, незнакомец!</h1>\n\t\t\t<div class=&quot;paragraph subtitle&quot;>Div с классом paragraph и subtitle</div>\n\t\t</div>\n    <p class=&quot;paragraph&quot;>Параграф с классом paragraph</p>\n    <script type=&quot;text/javascript&quot;>\n       let paragraphs = document.getElementsByClassName(&#x27;paragraph&#x27;);\n       console.log(paragraphs.length); // напечатает 2, так как поиск ведется по всей странице\n\n\t\t\t let divEl = document.getElementById(&#x27;title&#x27;);\n       // ищем параграфы внутри div:\n\t\t\t let paragraphsFromDiv = document.getElementsByClassName(&#x27;paragraph&#x27;);\n       console.log(paragraphsFromDiv.length); // напечатает 1, так как внутри div только один элемент с классом paragraph\n\n\t\t\t let subtitleParagraphs = document.getElementsByClassName(&#x27;paragraph subtitle&#x27;);\n       console.log(subtitleParagraphs.length); // напечатает 1, так как на странице только один элемент у которого есть и класс paragraph, и класс subtitle\n\n\t\t\t // ищем несуществующий элемент\n\t\t\t let spanFromBody = document.getElementsByClassName(&#x27;hello&#x27;);\n       console.log(spanFromBody.length); // напечатает 0\n    </script>\n  </body>\n</html></code></pre><h1>В работе</h1><p><em>Николай, front-end ниндзя\n</em>\n🛠 Поиск по тегам нужен нечасто.</p><p>🛠 Для поиска вообще всех элементов в качестве аргумента нужно передать строку <code>&#x27;*&#x27;</code>, ее называют wildcard. </p><p>🛠 Метод возвращает живую коллекцию. Это означает, что коллекция будет автоматически обновляться, если на странице появятся подходящие элементы. Если не очень понятно, как это работает, то посмотри пример в <a href='https://www.notion.so/getElementsByTagName-x-d9f3b88979b74214960b625c886ac709#d219a60c970a488085df1fb84df1b747'>статье по методу </a><a href='https://www.notion.so/getElementsByTagName-x-d9f3b88979b74214960b625c886ac709#d219a60c970a488085df1fb84df1b747'><code>getElementsByTagName</code></a>.</p><p>🛠 Будь аккуратен, когда пишешь циклы над <code>HTMLCollection</code>. Так как коллекция живая, то цикл может стать бесконечным в тех случаях, когда на страницу добавляются и удаляются подходящие под поиск элементы.</p><p>🛠 Скрипты, которые работают с HTML видят только ту разметку, которую уже распарсил браузер. Браузер парсит HTML сверху вниз. Если ваш скрипт находится вверху страницы, то он не найдет элементы ниже в странице — браузер их еще не увидел и ничего о них не знает. Поэтому скрипты либо подключают в конце страницы, либо <a href='https://www.notion.so/Element-addEventListener-c329b78c4c4147f0916e03cd966d818f'>подписываются на событие</a> <code>DOMContent​Loaded</code>, которое сигнализирует о том, что браузер распарсил весь HTML.</p><p>\n</p>\",    \"name\": \".getElementsByClassName()\",    \"id\": \"13\"  },  \"document.getelementbyid\": {    \"title\": \".getElementById(&#x27;&#x27;);\",    \"content\": \"<h1>Кратко</h1><p>Метод объекта <code>document</code>, который позволяет найти элемент на веб-странице по его идентификатору(<code>id</code>). Возвращает <a href='https://www.notion.so/Element-b336b04fa38042379a23d8c4b1a45a29'><code>Element</code></a> или <code>null</code>, если ничего не нашлось.</p><h1>Пример</h1><pre><code class='language-js code-result'><html>\n  <head></head>\n  <body >\n    <h1 id=&quot;title&quot;>Привет, незнакомец!</h1>\n    <script type=&quot;text/javascript&quot;>\n       let title = document.getElementById(&#x27;title&#x27;);\n       console.log(title.textContent); // напечатает &quot;Привет, незнакомец!&quot;\n    </script>\n  </body>\n</html></code></pre><p>\n</p><h1>В работе</h1><p><em>Николай, front-end ниндзя\n</em>\n🛠 С идентификаторами удобно работать, когда их немного. Они хорошо подходят для уникальных элементов на странице: единственного заголовка, элементов формы или самой формы. Не используй идентификаторы для повторяющихся элементов — элементов списков, повторяющихся полей.</p><p>🛠 Скрипты, которые работают с HTML видят только ту разметку, которую уже распарсил браузер. Браузер парсит HTML сверху вниз. Если ваш скрипт находится вверху страницы, то он не найдет элементы ниже в странице — браузер их еще не увидел и ничего о них не знает. Поэтому скрипты либо подключают в конце страницы, либо <a href='https://www.notion.so/Element-addEventListener-c329b78c4c4147f0916e03cd966d818f'>подписываются на событие</a> <code>DOMContent​Loaded</code>, которое сигнализирует о том, что браузер распарсил весь HTML.</p><p>🛠 HTML спецификация требует уникальности идентификатора на странице, но сайт не сломается, если идентификаторы задублируются. До такого лучше не доводить, потому что поведение <code>getElementById</code> в этом случае не определено — метод может вернуть любой из элементов.</p><p>🛠 В отличие от других похожих методов: <code>getElementsByClassName</code> и <code>getElementsByTagName</code> , метод <code>getElementById</code> есть только у объекта <code>document</code></p><p>\n</p>\",    \"name\": \".getElementById()\",    \"id\": \"14\"  },  \"indexof\": {    \"title\": \".indexOf(&#x27;&#x27;); \",    \"content\": \"<h1>Кратко</h1><p>Этот метод служит для поиска. Он определен для <a href='https://www.notion.so/x-b996497b4b114b5a90c8c429d457c7ab'>массивов</a> и <a href='https://www.notion.so/0d45f730c301491785032eb6e2b4c7fa'>строк</a>. </p><p>При вызове нужно передать, что искать. Вернется индекс первого найденного элемента или <code>-1</code>, если ничего не нашлось.</p><h1>В работе</h1><p><em>Николай, front-end ниндзя</em></p><b>🛠 Найти индексы всех подходящих элементов</b><p>Чтобы найти индексы всех искомых элементов, используют второй аргумент. Он указывает, с какого места начинать поиск. Таким образом можно проигнорировать те элементы, которые уже нашли и начинать поиск сразу после них:</p><pre><code class='language-js code-result'>let haystack = &quot;мама мыла раму&quot;;\nlet lastResult;\n\n// напечатаем индексы всех букв М во фразе\nwhile (lastResult !== -1) {\n  lastResult = haystack.indexOf(&quot;м&quot;, lastResult + 1);\n  if (lastResult !== -1) {\n    console.log(lastResult);\n  }\n}</code></pre><b>\n🛠 indexOf или includes</b><p>Не используй <code>indexOf</code> для проверки вхождения элемента в массив/строку, для этого есть метод <code>includes</code></p><p>Раньше методом <code>indexOf</code> часто проверяли, есть ли элемент в массиве. Эта задача проще, индекс здесь не нужен, но других методов для этого не было.</p><p>Поэтому в старых скриптах можно увидеть такой код:</p><pre><code>let guestList = [&quot;Петя&quot;, &quot;Настя&quot;, &quot;Артур&quot;, &quot;Лена&quot;, &quot;Настя&quot;, &quot;Эммануил&quot;];\nlet guest = // получаем откуда-нибудь имя гостя\n\nif (guestList.indexOf(guest) >= 0) {\n  // пускаем на вечеринку\n} else {\n  // отправляем домой\n}</code></pre><p>\n</p><p>🤖 Из-за того, что <code>indexOf</code> возвращает индекс, в условии обязательно нужна проверка (<code>>= 0</code> или <code>!== -1</code>). Если так не сделать, то появится неприятный баг: мы будем пускать на вечеринку всех, кроме первого гостя в списке. </p><p>Дело в том, что JavaScript интерпретирует ненулевые числа как истину (<code>true</code>) и будет запускать первую ветку <code>if</code>. А на первом госте indexOf вернет <code>0</code>, что считается ложным (<code>false</code>), и наш скрипт не пустит человека потусить.</p><p>\n</p>\",    \"name\": \"indexOf()\",    \"id\": \"15\"  },  \"addeventlistener\": {    \"title\": \"События\",    \"content\": \"<h1>Кратко</h1><p>Чтобы приложение было интерактивным, нам нужно понимать, что пользователь совершил то или иное действие на странице. Браузер распознает действия пользователя и создает <em>событие</em>. </p><p>События — это сигналы, которые браузер посылает разработчику, а разработчик может на сигнал реагировать. По аналогии со светофором: видим зеленый свет, едем дальше 🚦</p><p>События бывают разных типов: клик, нажатие клавиши на клавиатуре, прокрутка страницы и т.д.</p><p>Происходящие события можно слушать и выполнять код, когда нужное событие происходит. Например, при клике на кнопку показывать всплывающее окно.</p><h1>В работе</h1><p><em>Николай, front-end ниндзя</em>\n\n🛠 Всегда подписывайся на события с помощью <code>addEventListener</code>, так ты избежишь доработок, когда потребуется повесить несколько обработчиков на одно и то же событие.</p><p>🛠 Если нужно слушать все события определенного типа, вызови метод <code>addEventListener</code> у объекта <code>window</code>:</p><pre><code class='language-js code-result'>// слушаем все клики на странице\nwindow.addEventListener(&#x27;click&#x27;, function() {\n  alert(&#x27;clicked&#x27;);\n});</code></pre><p>🛠 Если не используешь объект события в обработчике, то не указывай его в списке параметров обработчика. Вместо <code>function (event) {…}</code> напиши <code>function() {…}</code>.</p><p>🛠 Всплытие событий — важный концепт, попробуй с ним поэкспериментировать. </p>\",    \"name\": \"addEventListener()\",    \"id\": \"17\"  },  \"onclick\": {    \"title\": \"Element: click\",    \"content\": \"<h1>Кратко</h1><p><a href='https://www.notion.so/1e3a945c53e2432e9109b969145fb7c6'>Событие</a> клика на HTML элементе. Когда юзер кликает мышкой по странице, браузер определяет, на каком элементе произошел клик и создает событие <code>click</code>. </p><p>На события можно подписаться и выполнять JavaScript код, когда событие произошло.</p><h1>В работе</h1><p><em>Николай, front-end ниндзя</em>\n\n🛠 С кликами есть тонкость. Если пользователь нажал кнопку мыши, увел курсор из элемента и потом кнопку отпустил, то события <code>click</code> не произойдет.</p><p>🛠 Можно слушать клики по любым элементам: <code>div</code>, <code>p</code>, <code>button</code> — браузеры это умеют.</p><p>🛠 Некоторые мобильные браузеры (например, Safari Mobile) создают события <code>click</code> только на интерактивных элементах — <code>button</code>, <code>a</code>, <code>img</code>, <code>input</code> и так далее.</p>\",    \"name\": \"onclick\",    \"id\": \"18\"  },  \"onmouseover\": {    \"title\": \"Element: mouseover\",    \"content\": \"<h1>Кратко</h1><p><a href='https://www.notion.so/1e3a945c53e2432e9109b969145fb7c6'>Событие</a> на HTML элементе. Происходит, когда пользователь передвигает курсор на сам элемент или на вложенные элементы. </p><p>На события можно подписаться и выполнять JavaScript код, когда событие произошло.</p><p>Событие является противоположным событию <a href='https://www.notion.so/Element-mouseout-a882b9485dca49cea8b4d0fa44ce63a9'><code>mouseout</code></a>. Эти события часто используются в паре.</p><h1>В работе</h1><p><em>Николай, front-end ниндзя</em>\n\n🛠 С помощью этого события можно делать выпадающие списки и меню.</p><p>🛠 Есть очень похожее событие <code>mouseenter</code>, но оно не <a href='https://www.notion.so/1e3a945c53e2432e9109b969145fb7c6#86ade4b3d7f6466caeb13f842bf8829e'>всплывает</a>. Вместо этого для каждого элемента в цепочке вложенности (с самого вложенного элемента, на котором произошло событие до <code>body</code>) создается собственное событие. Если у тебя глубокое DOM-дерево, то таких событий может быть много. Это может привести к проблемам с производительностью.</p><p>\n</p>\",    \"name\": \"onmouseover\",    \"id\": \"19\"  },  \"onmouseout\": {    \"title\": \"Element: mouseout\",    \"content\": \"<h1>Кратко</h1><p><a href='https://www.notion.so/1e3a945c53e2432e9109b969145fb7c6'>Событие</a> на HTML элементе. Происходит, когда пользователь передвигает курсор, который находится на элементе, за пределы элемента. </p><p>Событие является противоположным событию <a href='https://www.notion.so/Element-mouseover-e2e4ff362ebf4cc7857a59d1f1616a39'><code>mouseover</code></a>. Эти события часто используются в паре.</p><h1>В работе</h1><p><em>Николай, front-end ниндзя</em>\n\n🛠 С помощью этого события можно делать выпадающие списки и меню.</p><p>🛠 Есть очень похожее событие <code>mouseleave</code>, но оно не <a href='https://www.notion.so/1e3a945c53e2432e9109b969145fb7c6#86ade4b3d7f6466caeb13f842bf8829e'>всплывает</a>. Вместо этого для каждого элемента в цепочке вложенности (с самого вложенного элемента, на котором произошло событие до <code>body</code>) создается собственное событие. Если у тебя глубокое DOM-дерево, то таких событий может быть много. Это может привести к проблемам с производительностью.</p><p>\n</p>\",    \"name\": \"onmouseout\",    \"id\": \"20\"  },  \"onscroll\": {    \"title\": \"Element: scroll/wheel\",    \"content\": \"<h1>Кратко</h1><p><code>scroll</code> — это <a href='https://www.notion.so/1e3a945c53e2432e9109b969145fb7c6'>cобытие</a> на HTML элементе. Событие происходит, когда страница или элемент не входит на экран и пользователь ее прокручивает. Способ прокрутки может быть любым — колесом мыши, кнопками клавиатуры, с помощью скролл бара на экране.</p><p>Событие <code>wheel</code> происходит, когда пользователь прокручивает колесо мыши. При этом  реального прокручивания может не происходить. Например, наша страница полностью помещается на экран, но пользователь пытается ее прокрутить. В этом случае событие <code>wheel</code> будет происходить, а событие <code>scroll</code> — нет.</p><p>Событие <code>wheel</code> говорит о том, что пользователь пытается прокрутить страницу или элемент, а событие <code>scroll</code> говорит о том, что прокрутка реально происходит.</p><h1>В работе</h1><p><em>Николай, front-end ниндзя</em>\n\n🛠 Если вы подписались на <code>scroll</code>, то будьте готовы получать большое количество событий. Событие будет приходить примерно на каждый кадр. Поэтому в обработчике не рекомендуется производить тяжелых вычислений и модификации DOM. Это приведет к потере кадров при отрисовке и ощущения, что сайт тормозит.</p><p>🛠 Чтобы избежать большого количества событий <code>scroll</code>, используют технику под названием throttling. Ее смысл состоит в том, чтобы принимать следующее событие только после истечения некоторого промежутка времени. </p><pre><code>const throttle = (func, limit) =&gt; {\n  let lastFunc;\n  let lastRan;\n  return function() {\n    const context = this;\n    const args = arguments;\n    if (!lastRan) {\n      func.apply(context, args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n      lastFunc = setTimeout(function() {\n        if ((Date.now() - lastRan) &gt;= limit) {\n          func.apply(context, args);\n          lastRan = Date.now();\n        }\n      }, limit - (Date.now() - lastRan));\n    }\n  }\n}\n\n// код будет срабатывать раз в 1 секунду \ndocument.addEventListener(&#x27;scroll&#x27;, throttle(function() {\n  return console.log(&#x27;Hey! It is&#x27;, new Date().toUTCString());\n}, 1000));</code></pre>\",    \"name\": \"onscroll\",    \"id\": \"21\"  }}", LinkedTreeMap.class);
}
